<h1>Kigurumi</h1>

<%= form_with url:@method, local: true, html: {autocomplete: 'off'} do |f| %>
  <label>名前</label>
  <%= f.text_field :person_name, value: @kigurumi.owner&.name, id: :personName, class: :auto_complete %><br>
  <label>Twitter</label>
  @<%= f.text_field :twitter, value: @kigurumi.owner&.twitter, id: :twitter, class: :auto_complete %><br>

  <% if !@kigurumi.persisted? %>
    <div id="kigurumis">
      <p>すでに登録されている着ぐるみ</p>
      <ul></ul>
    </div>
  <% end %>

  <label>キャラクター名</label>
  <%= f.text_field :character_name, value: @kigurumi.character&.name, id: :characterName, class: :auto_complete %><br>
  <label>作品名</label>
  <%= f.text_field :work_name, value: @kigurumi.character&.work&.name, id: :workName, class: :auto_complete %><br>
  <label>工房</label>
  <%= f.select :factory_id, options_for_select([['', '']] + Factory.all.map{|factory| [factory.name, factory.id]}, @kigurumi.factory_id), {}, {id: :factoryId}%><br>
  <label>素体</label>
  <%= f.select :base_id, options_for_select([['', '']] + @kigurumi.factory.bases.map{|base| [base.name, base.id]}, @kigurumi.base_id), {}, {id: :baseId} %><br>
  <label>以前の所有者</label>
  <%= f.text_field :previous_owner_name, value: @kigurumi.previous_owner&.name, id: :previousOwnerName, class: :auto_complete %><br>
  <%= f.text_field :previous_owner_twitter, value: @kigurumi.previous_owner&.twitter, id: :previousOwnerTwitter, class: :auto_complete %><br>

  <label>画像</label>
  <% (1..3).each do |i| %>
    <%= f.text_field 'kigurumi_images[]', value: @kigurumi.kigurumi_images[i]&.url  %><br>
  <% end %>

  <%= f.submit '登録' %>
<% end %>

<script>
autoComplete.personChain({
  name: '#personName.auto_complete',
  twitter: '#twitter.auto_complete',
  nameUrl: '<%= auto_complete_people_path %>',
  nameVal: 'name',
  twitterUrl: '<%= auto_complete_twitter_people_path %>',
  twitterVal: 'twitter',
  displayVal: 'name_with_twitter',
  onSelected: function(name, twitter){
    $.get({
      url: '<%= kigurumis_people_path %>',
      dataType: 'json',
    data: {
      name: name.val(),
      twitter: twitter.val()
  }
  }).done(function(data){
    $('#kigurumis li').remove();
    $.each(data, function(id, kigurumi){
      $('#kigurumis ul').append($('<li>').text(kigurumi.character.name));
    });
  });
  }
});

autoComplete.personChain({
  name: '#previousOwnerName.auto_complete',
  twitter: '#previousOwnerTwitter.auto_complete',
  nameUrl: '<%= auto_complete_people_path %>',
  nameVal: 'name',
  twitterUrl: '<%= auto_complete_twitter_people_path %>',
  twitterVal: 'twitter',
  displayVal: 'name_with_twitter',
  onSelected: function(name, twitter){
    $.get({
      url: '<%= kigurumis_people_path %>',
      dataType: 'json',
    data: {
      name: name.val(),
      twitter: twitter.val()
    }  
  }).done(function(data){
    $('#kigurumis li').remove();
    $.each(data, function(id, kigurumi){
      $('#kigurumis ul').append($('<li>').text(kigurumi.character.name));
    });
  });
  }
});

autoComplete.characterWorkChain({
  character: '#characterName.auto_complete',
  work: '#workName.auto_complete',
  characterUrl: '<%= auto_complete_characters_path %>', 
  characterVal: 'name',
  workUrl: '<%= auto_complete_works_path %>',
  workVal: 'name',
  characterDisplayVal: 'name_with_work'
});
</script>